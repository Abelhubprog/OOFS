# Prometheus configuration for OOF backend monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'oof-backend'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # API service monitoring
  - job_name: 'oof-api'
    static_configs:
      - targets:
          - 'api:8080'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: service
        replacement: 'api'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

  # Indexer service monitoring
  - job_name: 'oof-indexer'
    static_configs:
      - targets:
          - 'indexer:8081'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: service
        replacement: 'indexer'

  # Workers service monitoring
  - job_name: 'oof-workers'
    static_configs:
      - targets:
          - 'workers:8082'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: service
        replacement: 'workers'

  # Detectors service monitoring
  - job_name: 'oof-detectors'
    static_configs:
      - targets:
          - 'detectors:8083'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: service
        replacement: 'detectors'

  # Renderer service monitoring
  - job_name: 'oof-renderer'
    static_configs:
      - targets:
          - 'renderer:8084'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.+):.+'
        target_label: service
        replacement: 'renderer'

  # PostgreSQL monitoring
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'postgresql'

  # Redis monitoring
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'redis'

  # NGINX monitoring
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'nginx'

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets:
          - 'node-exporter:9100'
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'node'

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: 'containers'
    metric_relabel_configs:
      # Drop high-cardinality container metrics
      - source_labels: [__name__]
        regex: 'container_(network_tcp_usage_total|network_udp_usage_total)'
        action: drop
      - source_labels: [id]
        regex: '/docker/.*'
        action: drop

  # Blackbox exporter for external service monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://price.jup.ag/v4/price?ids=So11111111111111111111111111111111111111112
          - https://api.helius.xyz/v0/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - source_labels: [__param_target]
        regex: 'https://price.jup.ag.*'
        target_label: service
        replacement: 'jupiter-api'
      - source_labels: [__param_target]
        regex: 'https://api.helius.xyz.*'
        target_label: service
        replacement: 'helius-api'

  # Health check endpoints
  - job_name: 'health-checks'
    metrics_path: /health
    static_configs:
      - targets:
          - 'api:8080'
          - 'indexer:8081'
          - 'workers:8082'
          - 'detectors:8083'
          - 'renderer:8084'
    scrape_interval: 30s
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.+):(\d+)'
        target_label: service
        replacement: '${1}'
      - source_labels: [__address__]
        target_label: instance

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"
#     write_relabel_configs:
#       - source_labels: [__name__]
#         regex: 'oof_.*'
#         action: keep

# Storage configuration
storage:
  tsdb:
    # Retention period for metrics data
    retention.time: 30d
    # Maximum size for metrics data
    retention.size: 50GB
    # Compression settings
    wal-compression: true

# Web server configuration
web:
  # External URL for Prometheus
  external-url: 'http://prometheus:9090'
  # Enable lifecycle API for reloading config
  enable-lifecycle: true
  # Enable admin API
  enable-admin-api: false
  # Console templates and libraries
  console.templates: 'consoles'
  console.libraries: 'console_libraries'

# Tracing configuration (optional)
# tracing:
#   endpoint: 'jaeger:14268/api/traces'
#   insecure: true
#   timeout: 5s

# Feature flags
feature_flags:
  # Enable new service discovery manager
  new-service-discovery-manager: true
  # Enable UTF-8 support
  utf8-names: true
